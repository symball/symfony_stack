<?php

namespace AppBundle\Repository;

use Doctrine\ODM\MongoDB\DocumentRepository;

/**
 * TagRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TagRepository extends DocumentRepository
{
  public function findByTextNameType($textSearch, $tagType)
  {
    return $this->createQueryBuilder()
      ->field('type')->equals($tagType)
      ->field('title')->text($textSearch)
      ->sort('title', 'ASC')
      ->getQuery()
      ->execute();
  }
  public function findTypes()
	{
		return $this->createQueryBuilder()
      ->select('type')
      ->distinct('type')
      ->getQuery()
      ->execute();
	}
  /* THE METHODS BELOW ARE FOR USE AS CALLBACKS IN SONATA ADMIN */
  public function noxfindByType($type)
  {
    return $this->createQueryBuilder()
    ->field('type')->equals($type)
    ->sort('title', 'ASC')
    ->getQuery()
    ->execute();
  }
  public function findBySearchTitleAndType($title, $type)
  {
    return $this->createQueryBuilder()
    ->field('type')->equals($type)
    ->field('title')->text('"'.$title.'"')
    ->sort('title', 'ASC')
    ->getQuery()
    ->execute();
  }
  public function findOneBySlugAndType($slug, $type)
  {
    return $this->createQueryBuilder()
    ->field('type')->equals($type)
    ->field('slug')->equals($slug)
    ->sort('order', 'asc')
    ->sort('title', 'asc')
    ->getQuery()
    ->getSingleResult();
  }
  public function findByTypesAndLevel($types, $level = 0)
  {
   return $this->createQueryBuilder()
   ->field('type')->in($types)
   ->field('level')->equals($level)
   ->sort('order', 'ASC')
   ->getQuery()
   ->execute();
  }
}
